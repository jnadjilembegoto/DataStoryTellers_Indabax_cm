import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import streamlit as st
from wordcloud import WordCloud

#st.title(" Competition INDA Hackaton")

from Datas.data_link import data_dir
path = data_dir('base_streamlit_storytellers.xlsx')
data = pd.read_excel(path, sheet_name='year')

# Charger les donn√©es
df=data.copy()

def page_santeElig():
    #st.sidebar.write("## Navigation")
    #st.sidebar.markdown("---")
    # Liste des conditions de sant√©
    conditions = [
        "antibiotherapie", "hemoglobine_basse", "ist_recente", "drepanocytaire",
        "diabetique", "hypertendu", "asthmatique", "cardiaque"
    ]

    
    
    with st.sidebar:
        st.title("üè•")
        st.markdown("---")
    titres_onglets = ["Impact global des maladies sur l'√©ligibilit√©", "Impact sp√©ficique"]
    onglets_selectionnee=st.sidebar.radio("Forme d'analyse",titres_onglets)
    
    if onglets_selectionnee== "Impact global des maladies sur l'√©ligibilit√©":
        # Filtrer le DataFrame pour ne garder que les donneurs "non √©ligibles"
        # Remplacer "Oui" par True et "Non" par False, et g√©rer NaN
        # Filtrer les donneurs non √©ligibles
        df_non_eligible = df[df["√âLIGIBILIT√â AU DON."] == "non √©ligible"]
        df_non_eligible = df_non_eligible[conditions].applymap(lambda x: True if x == "Oui" else (False if x == "Non" else x))


        # Liste des conditions de sant√©
        conditions = [
            "antibiotherapie", "hemoglobine_basse", "ist_recente", "drepanocytaire",
            "diabetique", "hypertendu", "asthmatique", "cardiaque"
        ]

        

        # Liste des conditions "Oui" parmi les donneurs non √©ligibles
        conditions_oui = []

        # V√©rification de chaque condition et ajout √† la liste si "Oui"
        for condition in conditions:
            # Compter uniquement les "Oui" et ignorer NaN
            conditions_oui.extend([condition] * df_non_eligible[condition].sum())

        # G√©n√©rer le WordCloud avec les conditions ayant la valeur "Oui"
        wordcloud = WordCloud(width=800, height=400, background_color="white").generate(" ".join(conditions_oui))

        # Affichage du WordCloud dans Streamlit
        st.subheader("Maladies r√©currentes chez les donneurs non √©ligibles")
        st.image(wordcloud.to_array(), use_column_width=True)


    if onglets_selectionnee=="Impact sp√©ficique":
        # Cr√©er un selectbox pour choisir une condition parmi celles-ci
        condition_choisie = st.sidebar.selectbox("Choisissez une condition de sant√©", conditions)

       

        # Cr√©ation du graphique pour la condition choisie
        st.subheader(f"Impact de la condition '{condition_choisie}' sur l'√©ligibilit√© au don de sang")

        # Groupement des donn√©es par la condition choisie et l'√©ligibilit√©
        condition_df = df.groupby([condition_choisie, '√âLIGIBILIT√â AU DON.']).size().unstack().fillna(0)

        # Affichage des statistiques
        st.write(f"Nombre de donneurs pour la condition '{condition_choisie}' :")
        st.dataframe(condition_df)

        # Cr√©ation du graphique
        plt.figure(figsize=(8, 5))
        sns.barplot(x=condition_df.index, y=condition_df["non √©ligible"])#, label="Eligible")
        #sns.barplot(x=condition_df.index, y=condition_df["non √©ligible"], color="red", label="non √©ligible")

        # Ajouter des titres et des labels
        plt.title(f"Comparaison de l'√©ligibilit√© pour la condition '{condition_choisie}'", fontsize=14)
        plt.xlabel(condition_choisie, fontsize=12)
        plt.ylabel("Nombre de donneurs non √©ligible", fontsize=12)
        #plt.legend(title="√âligibilit√©")

        # Affichage du graphique dans Streamlit
        st.pyplot(plt)

    






